<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">


    <!--<util:properties location="mysql-config.properties"/>-->

    <!--<context:property-placeholder location="classpath*:mysql-config.properties"/>-->

    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location">
            <value>mysql-config.properties</value>
        </property>
    </bean>

    <context:component-scan base-package="com.tian.spring.mybatis.*"/>


    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init">
        <property name="driverClassName" value="${driver}"/>
        <property name="url" value="${url}"/>
        <property name="username" value="${username}"/>
        <property name="password" value="${password}"/>
        <property name="maxWait" value="10"/>
        <property name="initialSize" value="5"/>
        <property name="maxActive" value="5"/>
        <property name="minIdle" value="5"/>
    </bean>


    <bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="mapperLocations" value="classpath*:mybatis/**/*.xml"/>
        <property name="typeAliasesPackage" value="com.tian.spring.mybatis.entity"/>
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.tian.spring.mybatis.mapper"/>
        <property name="sqlSessionFactoryBeanName" value="sessionFactory"/>
    </bean>


    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <aop:aspectj-autoproxy proxy-target-class="true"/>


    <!--<tx:advice id="txAdvice" transaction-manager="transactionManager">-->
    <!--<tx:attributes>-->
    <!--<tx:method name="select*" read-only="true"/>-->
    <!--<tx:method name="update*" propagation="REQUIRED"/>-->
    <!--</tx:attributes>-->
    <!--</tx:advice>-->

    <!--&lt;!&ndash; 事务入口 &ndash;&gt;-->
    <!--<aop:config>-->
    <!--<aop:pointcut id="allServiceMethod" expression="execution(* your service implements package.*.*(..))" />-->
    <!--<aop:advisor pointcut-ref="allServiceMethod" advice-ref="txAdvice" />-->
    <!--</aop:config>-->


</beans>