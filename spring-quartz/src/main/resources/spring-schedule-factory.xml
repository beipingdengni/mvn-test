<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans.xsd">


    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url"
                  value="jdbc:mysql://localhost:3306/quartz_test?useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=false"/>
        <property name="username" value="root"/>
        <property name="password" value="123456"/>
        <property name="initialSize" value="1"/>
        <property name="maxActive" value="10"/>
        <property name="minIdle" value="5"/>
        <property name="maxIdle" value="100"/>
        <property name="maxWait" value="60000"/>
    </bean>

    <!--bean-->
    <bean id="customQuartz" class="com.tian.spring.quartz.annotion.CustomSpringQuartz"/>

    <!--detail-->
    <bean id="customDetail" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
        <property name="jobClass" value="com.tian.spring.quartz.annotion.CustomSpringQuartz"/>
        <property name="durability" value="true"/>
    </bean>
    <!--cron-->
    <bean id="customTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="customDetail"/>
        <property name="cronExpression" value="0/1 * * * * ?"/>
        <property name="misfireInstruction" value="2"/>
    </bean>

    <!--scheduleFactory-->
    <bean id="schedulerFactoryBean" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <!-- Triggers集成   动态配置 -->
        <property name="triggers">
            <list>
                <ref bean="customTrigger"/>
            </list>
        </property>
        <!-- quartz配置文件路径, 指向cluster配置 -->
        <property name="configLocation" value="classpath:quartz.properties"/>
        <!-- 启动时延期2秒开始任务 -->
        <property name="startupDelay" value="2"/>
        <!-- 保存Job数据到数据库所需的数据源 -->
        <property name="dataSource" ref="dataSource"/>
        <!-- Job接受applicationContext的成员变量名 -->
        <!--<property name="schedulerContextAsMap">-->
        <!--<map>-->
        <!--&lt;!&ndash; spring管理的服务需要放到这里，才能够注入成功 &ndash;&gt;-->
        <!--<description>schedulerContextAsMap</description>-->
        <!--<entry key="allocationOrderService" value-ref="allocationOrderService"/>-->
        <!--</map>-->
        <!--</property>-->
        <property name="applicationContextSchedulerContextKey" value="applicationContext"/>
        <!-- 修改job时，更新到数据库 -->
        <property name="overwriteExistingJobs" value="true"/>
    </bean>


</beans>